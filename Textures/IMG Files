.IMG Files

Header Data
  8 Bytes IMG Version Possibly? [THUG2 Remix/MTX Mototrax = 02 00 00 00 7C FC 12 00 THP8 = 04 00 00 00 73 65 53 56]
  18 Bytes ???
  2 Bytes Is Image Swizzled [10 00 = Swizzled 00 00 = Not Swizzled]
  4 Bytes IMG Resolution [2 Bytes Width, 2 Bytes Height]

Color Pal Data (If IMG has it)
  If 16 Colors
  64 Bytes [4 Bytes for each color, 1 Byte Red, 1 Byte Blue, 1 Byte Green, 1 Byte Alpha]
  
  If 256 Colors Ver 1
  1024 Bytes [4 Bytes for each color, 1 Byte Red, 1 Byte Blue, 1 Byte Green, 1 Byte Alpha]
  
  If 256 Colors Ver 2
  512 Bytes [2 bytes for each color, 1 half Byte part Red and Green, 1 half Byte part Red, 1 half Byte Alpha, part Blue, 1 half Byte part Blue, part Green] (See chart below for more insight)
  
Byte 1 First Half	          Byte 1 Second Half	  Byte 2 First Half	          Byte 2 Second Half
Byte 0 = [R = 0 G = 0]	    Byte 0 = [R = 0]	    Byte 0 = [A = 0 B = 0]	    Byte 0 = [B = 0 G = 0]
Byte 1 = [R = 133 G = 0]	  Byte 1 = [R = 8]	    Byte 1 = [A = 0 B = 33]	    Byte 1 = [B = 0 G = 66]
Byte 2 = [R = 0 G = 8]	    Byte 2 = [R = 16]	    Byte 2 = [A = 0 B = 66]   	Byte 2 = [B = 0 G = 133]
Byte 3 = [R = 133 G = 8]	  Byte 3 = [R = 24]    	Byte 3 = [A = 0 B = 100]	  Byte 3 = [B = 0 G = 200]
Byte 4 = [R = 0 G = 16]	    Byte 4 = [R = 33]	    Byte 4 = [A = 0 B = 133]	  Byte 4 = [B = 8 G = 0]
Byte 5 = [R = 133 G = 16]	  Byte 5 = [R = 41]	    Byte 5 = [A = 0 B = 166]	  Byte 5 = [B = 8 G = 66]
Byte 6 = [R = 0 G = 24]	    Byte 6 = [R = 49]	    Byte 6 = [A = 0 B = 200]	  Byte 6 = [B = 8 G = 133]
Byte 7 = [R = 133 G = 24]	  Byte 7 = [R = 57]	    Byte 7 = [A = 0 B = 233]	  Byte 7 = [B = 8 G = 200]
Byte 8 = [R = 0 G = 33]	    Byte 8 = [R = 66]	    Byte 8 = [A = 255 B = 0]	  Byte 8 = [B = 16 G = 0]
Byte 9 = [R = 133 G = 33]	  Byte 9 = [R = 75]	    Byte 9 = [A = 255 B = 33]	  Byte 9 = [B = 16 G = 66]
Byte A = [R = 0 G = 41]     Byte A = [R = 83]	    Byte A = [A = 255 B = 66]	  Byte A = [B = 16 G = 133]
Byte B = [R = 133 G = 41]	  Byte B = [R = 91]	    Byte B = [A = 255 B = 100]	Byte B = [B = 16 G = 200]
Byte C = [R = 0 G = 49]	    Byte C = [R = 100]	  Byte C = [A = 255 B = 133]	Byte C = [B = 24 G = 0]
Byte D = [R = 133 G = 49]	  Byte D = [R = 108]	  Byte D = [A = 255 B = 166]	Byte D = [B = 24 G = 66]
Byte E = [R = 0 G = 57]	    Byte E = [R = 116]	  Byte E = [A = 255 B = 200]	Byte E = [B = 24 G = 133]
Byte F = [R = 133 G = 57]	  Byte F = [R = 124]	  Byte F = [A = 255 B = 233]	Byte F = [B = 24 G = 200]
 
 Pixel Data
   If Color Pal Is 16 & Image Is Not Swizzled
   Width Val * Height Val / 2 Bytes [Each Byte is 2 pixels, with each half of the byte representing a value from 0 - 15 (0 - f) which will set that pixel as that color in the color pal list]
                                    [Image is drawn in the order that the pixel data is read]
                                    
   If Color Pal Is 16 & Image Is Swizzled
   Width Val * Height Val / 2 Bytes [Each Byte is 2 pixels, with each half of the byte representing a value from 0 - 15 (0 - f) which will set that pixel as that color in the color pal list]
                                    [Image is drawn in chunks, each big chunk is 512 bytes, with the small chunks inside of the big chunks being 64 bytes, there should be 8 small chunks to a big chunk]
                                    [Small chunks are made up of 8 lines of 8 bytes, each line being drawn under the one before it, so line 1 of small chunk 1 draws 16 bytes at w/h 0, and line 2 of small chunk 1 draws 16 bytes at w 0 h 1, and so on until the small chunk is done, then the next small chunk continues from the last chunk, so line 1 of small chunk 2 draws 16 bytes at w 16 h 0, and line 2 of small chunk 2 draws 16 bytes at w 16 h 1, and so on until all small chunks of the big chunk have been drawn, and it moves onto the next big chunk]
                                    
   If Color Pal Is 256 & Image Is Not Swizzled
   Width Val * Height Val Bytes [Each Byte is 1 pixel, with each byte representing a value from 0 - 255 (00 - ff) which will set that pixel as that color in the color pal list]
                                [Image is drawn in the order that the pixel data is read]
                                
   If Color Pal Is 256 & Image Is Swizzled
   Width Val * Height Val Bytes [Each Byte is 1 pixel, with each byte representing a value from 0 - 255 (00 - ff) which will set that pixel as that color in the color pal list]
                                [Image is drawn in chunks, each big chunk is 1024 bytes, with the small chunks inside of the big chunks being 128 bytes, there should be 8 small chunks to a big chunk]
                                [Small chunks are made up of 8 lines of 16 bytes, each line being drawn under the one before it, so line 1 of small chunk 1 draws 16 bytes at w/h 0, and line 2 of small chunk 1 draws 16 bytes at w 0 h 1, and so on until the small chunk is done, then the next small chunk continues from the last chunk, so line 1 of small chunk 2 draws 16 bytes at w 16 h 0, and line 2 of small chunk 2 draws 16 bytes at w 16 h 1, and so on until all small chunks of the big chunk have been drawn, and it moves onto the next big chunk]
                                    
   If No Color Pal
   Width Val * Height Val * 4 Bytes [Each 4 Bytes is a pixel, with 1 Byte for Red, 1 Byte Blue, 1 Byte Green, 1 Byte Alpha]
   
